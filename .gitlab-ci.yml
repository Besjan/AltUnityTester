.reinstall_and_start_app: &reinstall_and_start_app
- adb uninstall fi.altom.altunitytester || true
- adb install sampleGame.apk
- adb shell am start -n fi.altom.altunitytester/com.unity3d.player.UnityPlayerActivity

.initialize_venv: &initialize_venv
- >
  if [ -d altunitytests ]; then
    echo "Activating virtual environment."
    source altunitytests/bin/activate
    echo "Virtual environment has been activated."
  else
    echo "Creating virtual environment."
    virtualenv altunitytests
    source altunitytests/bin/activate
    echo "Virtual environment has been created and activated."
  fi

.pip_install_dependencies: &pip_install_dependencies
- pip install Appium-Python-Client
- pip uninstall --yes altunityrunner || true
- pip install -e "Assets/AltUnityTester-BindingsAndExamples(can_be_deleted)/Bindings~/python"
- pip install Deprecated
- sleep 30

stages:
    - build-android
    - android-tests
    - create-package
    - build-ios
    - ios-tests
    - docs
    - appium-tests
    - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - sampleGame.apk
  - sampleGame/
  - .cache/pip
  - altunitytests/

build-apk:
    stage: build-android
    tags:
      - android
      - unity
    script:
    - adb uninstall fi.altom.altunitytester || true
    - /Applications/Unity/Unity.app/Contents/MacOS/Unity -batchmode -projectPath $CI_PROJECT_DIR -executeMethod BuildAltUnityTester.AndroidBuildFromCommandLine -logFile buildAndroid.log -quit
    - ls 
    artifacts:
      when: always
      expire_in: 10 days
      paths:
        - buildAndroid.log
 
run-csharp-android-tests:
    stage: android-tests
    tags:
        - android
        - unity
    script:
        - *reinstall_and_start_app
        - /Applications/Unity/Unity.app/Contents/MacOS/Unity -projectPath $CI_PROJECT_DIR -executeMethod AltUnityTestRunner.RunAllTestsAndroid -logFile csharpAndroidTests.log -quit 
    artifacts:
      when: always
      expire_in: 10 days
      paths:
        - csharpAndroidTests.log

run-python-android-tests:
    stage: android-tests
    tags:
        - android
        - unity
    script:
        - *reinstall_and_start_app
        - adb forward --remove-all
        - adb forward tcp:13000 tcp:13000
        - *initialize_venv
        - *pip_install_dependencies
        - python3 "Assets/AltUnityTester-BindingsAndExamples(can_be_deleted)/Bindings~/python_bindings_tests.py"

run-java-android-tests:
    stage: android-tests
    tags:
        - android
        - unity
    script:
        - *reinstall_and_start_app
        - adb forward --remove-all
        - adb forward tcp:13000 tcp:13000
        - cd "Assets/AltUnityTester-BindingsAndExamples(can_be_deleted)/Bindings~/java"
        - mvn test

create-unity-package:
    stage: create-package
    only:
        refs:
            - master
    tags:
      - android
      - unity
    script:
      - /Applications/Unity/Unity.app/Contents/MacOS/Unity -projectPath $CI_PROJECT_DIR -executeMethod AltUnityTesterEditor.CreateAltUnityTesterPackage -logFile createAltUnityTesterPackage.log -quit
      - mkdir -p public/${CI_COMMIT_REF_NAME} || true
      - mv AltUnityTester.unitypackage public/${CI_COMMIT_REF_NAME}/AltUnityTester.unitypackage
      - cd public/${CI_COMMIT_REF_NAME}/
      - echo '<a href="https://altom.gitlab.io/altunity/altunitytester/'${CI_COMMIT_REF_NAME}'/AltUnityTester.unitypackage">AltUnityTester.unitypackage</a>' > index.html
      - ls
    artifacts:
      when: always
      paths:
        - public

# build-ipa:
#     stage: build-ios
#     tags:
#       - unity
#     script:
#       - /Applications/Unity/Unity.app/Contents/MacOS/Unity -projectPath $CI_PROJECT_DIR -executeMethod AltUnityTesterEditor.InitEditorConfiguration -logFile initEditorConfiguration.log -quit
#       - /Applications/Unity/Unity.app/Contents/MacOS/Unity -projectPath $CI_PROJECT_DIR -executeMethod AltUnityTesterEditor.IosBuildFromCommandLine -logFile buildIos.log -quit
#       - cd sampleGame
#       - xcodebuild build-for-testing -scheme Unity-iPhone -destination generic/platform=iOS
#       - ls 
#     artifacts:
#       when: always
#       expire_in: 10 days
#       paths:
#         - buildIos.log

# run-csharp-ios-tests:
#     stage: ios-tests
#     tags:
#         - unity
#     script:
#         - cd sampleGame
#         - xcodebuild test-without-building -destination 'platform=iOS,name=iPhone' -scheme Unity-iPhone &
#         - sleep 60
#         - /Applications/Unity/Unity.app/Contents/MacOS/Unity -projectPath $CI_PROJECT_DIR -executeMethod AltUnityTesterEditor.RunAllTestsIOS -logFile csharpIosTests.log -quit     
#         - killall xcodebuild || true   
#     artifacts:
#       when: always
#       expire_in: 10 days
#       paths:
#         - csharpIosTests.log    
        
run-python-appium-android-tests:
    stage: appium-tests
    tags:
        - android
        - unity
    script:
        - *initialize_venv
        - *pip_install_dependencies
        - python "Assets/AltUnityTester-BindingsAndExamples(can_be_deleted)/Bindings~/python_appium_tests.py"
    artifacts:
        when: always
        expire_in: 10 days
        paths:
            - appium.log

run-java-appium-android-tests:
    stage: appium-tests
    tags:
        - android
        - unity
    script:
        - cd "Assets/AltUnityTester-BindingsAndExamples(can_be_deleted)/Bindings~/java"
        - mvn clean compile assembly:single
        - mvn install:install-file -Dfile=./target/altunitytester-java-client-1.5.2-SNAPSHOT-jar-with-dependencies.jar -DgroupId=ro.altom -DartifactId=altunitytester -Dversion=1.5.2 -Dpackaging=jar
        - cd ../java-appium-tests
        - mvn test
    artifacts:
        when: always
        expire_in: 10 days
        paths:
            - "./Assets/AltUnityTester-BindingsAndExamples(can_be_deleted)/Bindings~/java/target/altunitytester-java-client-1.5.2-SNAPSHOT-jar-with-dependencies.jar"

deploy-altunitytester-python:
    stage: deploy
    when: manual
    tags:
        - unity
    script:
        - cd "Assets/AltUnityTester-BindingsAndExamples(can_be_deleted)/Bindings~/python"
        - python setup.py sdist upload -r pypi

docs:
  stage: docs
  only:
        refs:
            - master
  artifacts:
    paths:
      - documentation
  tags:
    - unity
  script:
    - cd docs
    - *initialize_venv
    - python3 -m pip install -r requirements.txt
    - make html
    - cp -r _build/html ../documentation

docs_test:
  stage: docs
  except:
        refs:
            - master
  artifacts:
    paths:
      - documentation
  tags:
    - android
    - unity
  script:
    - cd docs
    - *initialize_venv
    - python3 -m pip install -r requirements.txt
    - make html
    - make html
    - cp -r _build/html ../documentation/test

pages:
  stage: deploy
  except:
        refs:
            - master
  tags:
    - unity
  dependencies:
    - docs
    - create-unity-package
  artifacts:
    paths:
    - public
  script:
    - cp -r documentation/test public/test
    
pages:
  stage: deploy
  only:
        refs:
            - master
  tags:
    - unity
  dependencies:
    - docs
    - create-unity-package
  artifacts:
    paths:
    - public
  script:
    - cp -r documentation/ public/
